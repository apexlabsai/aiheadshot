// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  orders        Order[]
  createdAt     DateTime  @default(now())
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Order {
  id            String   @id @default(cuid())
  userId        String
  user          User     @relation(fields: [userId], references: [id])
  stripeId      String   @unique
  plan          String   // AD_PACK
  status        String   // QUEUED | PROCESSING | DONE | FAILED
  productUrl    String?
  brandVoice    String?  // playful | minimal | clinical
  targetAudience String?
  keyBenefits   Json?    // array of strings
  uploadedAssets Json?   // array of file URLs
  preferences   Json?    // additional preferences
  outputFiles   Json?    // array of result video URLs
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  etaMinutes    Int?
  error         String?
  addOns        Json?    // IG_REEL_CROPS, SRT_FILES
  jobs          Job[]    // Add this relation
}

model Job {
  id            String   @id @default(cuid())
  orderId       String   @unique
  order         Order    @relation(fields: [orderId], references: [id])
  status        String   // QUEUED | PROCESSING | DONE | FAILED
  template      String?  // template name used
  script        String?  // generated script
  shotList      Json?    // array of shot objects
  captions      Json?    // array of caption objects
  outputFiles   Json?    // array of video URLs
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  etaMinutes    Int?
  error         String?
  retryCount    Int      @default(0)
}
